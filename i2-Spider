#爬虫部分使用开源的Webmagic框架。
webmagic由四个组件Downloader，PageProcessor，Scheduler和Pipeline构成。
Downloader负责从互联网上下载页面，以便后续处理。
PageProcessor负责解析页面，抽取有用信息，以及发现新的链接。PageProcessor对于每个站点每个页面都不一样，是需要使用者定制的部分。
Scheduler负责管理待抓取的URL，以及一些去重的工作。WebMagic默认提供了JDK的内存队列来管理URL，并用集合来进行去重。也支持使用Redis进行分布式管理。
Pipeline负责抽取结果的处理，包括计算、持久化到文件、数据库等。WebMagic默认提供了“输出到控制台”和“保存到文件”两种结果处理方案。

#用于数据流转的对象
1. Request
Request是对URL地址的一层封装，一个Request对应一个URL地址。
它是PageProcessor与Downloader交互的载体，也是PageProcessor控制Downloader唯一方式。
除了URL本身外，它还包含一个Key-Value结构的字段extra。你可以在extra中保存一些特殊的属性，然后在其他地方读取，以完成不同的功能。例如附加上一个页面的一些信息等。

2. Page
Page代表了从Downloader下载到的一个页面——可能是HTML，也可能是JSON或者其他文本格式的内容。
Page是WebMagic抽取过程的核心对象，它提供一些方法可供抽取、结果保存等。

3. ReusltItems
ReusltItems相当于一个Map，它保存PageProcessor处理的结果，供Pipeline使用。它的API与Map很类似，值得注意的是它有一个字段skip，若设置为true，则不应被Pipeline处理。

#控制爬虫运转的引擎--Spider
Spider是WebMagic内部流程的核心。
Downloader、PageProcessor、Scheduler、Pipeline都是Spider的一个属性，这些属性是可以自由设置的，通过设置这个属性可以实现不同的功能。
Spider也是WebMagic操作的入口，它封装了爬虫的创建、启动、停止、多线程等功能。


Pipeline输出如下结构体格式的对象，并将其存储到数据库中。/Pipeline输出如下格式的json的DOM
typedef struct Page {
  "encoding":"utf-8",
  "URL":"https://www.github.com/schoolprojs/gitsoo/",
  "pageId":2,
  "parentPageCount":2,
  "pageWeigh":1,
  "title":"gitsoo",
  "timestamp":"201605151615",
  "author":"authorname",
  "label":["type label1", "type label2"],
  "text":"page content"
};
每篇网页对应一个如上所示结构的json对象模型。


随后，对json格式的DOM进行解析，gitsoo使用jsoncpp这一开源库进行json的解析，并将相关属性存储到数据库。
文档数据库需要添加updated属性{0,1}
